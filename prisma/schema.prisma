// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Session {
  id              String   @id @default(uuid())
  title           String
  duration        Int // Duration in minutes
  createdAt       DateTime @default(now())
  description     String?
  recurrence      String? // Could be "none", "daily", "weekly", etc.
  maxAthletes     Int
  currentAthletes Int      @default(0)
  dayOfWeek       Int // Representing days as numbers (e.g., 1 for Monday)
  startTime       DateTime
  endTime         DateTime
  workoutId       String?
  boxId           String?

  // Relations
  Workout      Workout?  @relation(fields: [workoutId], references: [id])
  Box          Box?      @relation(fields: [boxId], references: [id])
  Coaches      Athlete[] @relation("CoachSession")
  Participants Athlete[] @relation("SessionParticipants")
}

model Athlete {
  id                    String    @id @default(uuid())
  createdAt             DateTime  @default(now())
  firstName             String
  lastName              String
  profileImageUrl       String?
  email                 String    @unique
  gender                String
  isCoach               Boolean
  isOwner               Boolean
  boxId                 String?
  Box                   Box?      @relation(fields: [boxId], references: [id])
  CoachedSessions       Session[] @relation("CoachSession")
  ParticipatingSessions Session[] @relation("SessionParticipants")
}

model Box {
  id         String    @id @default(uuid())
  createdAt  DateTime  @default(now())
  name       String?
  nickname   String?
  street     String?
  city       String?
  state      String?
  postalCode String?
  country    String?
  phone      String?
  email      String?
  website    String?
  Athletes   Athlete[]
  Sessions   Session[]
}

model Workout {
  id          String    @id @default(uuid())
  createdAt   DateTime  @default(now())
  type        String
  duration    Int // Duration in minutes
  intensity   Intensity // Low, Medium, High
  title       String
  description String
  publishAt   DateTime?
  isPublished Boolean
  Sessions    Session[]
}

enum Intensity {
  Low
  Medium
  High
}
